/////////////////////////////////////////////////////////////////////////////////////////////
///                             针对系统类型提供扩展方法
/////////////////////////////////////////////////////////////////////////////////////////////
///    扩展方法的好处在于，不用重写原有类型即可为原有类型提供附加的方法。
///    需要注意的点有2：一是如果扩展方法与类型原有方法一样（例如string.SubString(int index)，
///方法名和参数均一样才算一样）,则原有方法会自动覆盖扩展方法。二是由于扩展方法的简易型（简直
///是随便写），有可能会影响到原有的架构、模式等，而且代码可读性较低（谁知道你扩展方法都写到哪
///去了），慎用。
/////////////////////////////////////////////////////////////////////////////////////////////
///                             实现扩展方法的先决条件
///<1>扩展方法必须在一个非嵌套、非泛型的静态类中定义
///<2>扩展方法必须是一个静态方法
///<3>扩展方法至少要有一个参数
///<4>第一个参数必须附加this关键字作为前缀
///<5>第一个参数不能有其他修饰符（比如ref或者out）
///<6>第一个参数不能是指针类型
/////////////////////////////////////////////////////////////////////////////////////////////
using System;

namespace TestConsoleApplication
{
    public static class PracticeFunctionAddOn
    {
        public static void PrintString(this String str)
        {
            Console.WriteLine(str);
        }
    }
}
