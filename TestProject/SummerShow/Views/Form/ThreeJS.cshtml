@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ThreeJS</title>    
</head>
<body>
    <canvas id="mainCanvas" width="400px" height="300px"></canvas>
</body>
</html>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/three.js"></script>
<script>
    //一个典型的three.js程序需包括渲染器（renderer），场景（sence）、照相机（camera）
    $(function () {
        var renderer = new THREE.WebGLRenderer({
            canvas: document.getElementById("mainCanvas")
        });
        //three.js 自动生成canvas
        //var renderer = new THREE.WebGLRenderer();
        //renderer.setSize(400, 300);
        //document.getElementsByTagName('body')[0].appendChild(renderer.domElement);
        renderer.setClearColor(0x000000);
        //场景
        var scene = new THREE.Scene();

        //透视投影照相机
        //var camera = new THREE.PerspectiveCamera(45, 4 / 3, 1, 1000);
        //如果改变角度45 增大到60 正方体会变小，因为 照相机竖直张角更大时，视景体变大，那正方体相对变小

        //正交投影照相机
        var camera = new THREE.OrthographicCamera(-2, 2, 1.5, -1.5, 1, 10);
         
        camera.position.set(4, -3, 5);
        //通过lookAt函数指定它看着原点方向
        camera.lookAt(new THREE.Vector3(0, 0, 0))

        scene.add(camera);

        //创建长方体
        var cube = new THREE.Mesh(new THREE.CubeGeometry(1, 1, 1),
            new THREE.MeshBasicMaterial({
                color: 0xff0000,
                wireframe:true
            })
            );
        //立方体（长方体）
        var cub = new THREE.CubeGeometry(1,2,3);

        //球体
        var sphere = new THREE.SphereGeometry(3,8,6);

        //将长方体添加到场景中
        scene.add(cube);

        //创建字体
        var loaderFont = new THREE.FontLoader();
        loaderFo.loader();
        var mesh = new THREE.Mesh(new THREE.TextGeometry("HelloWord", {
            font: 'helvetiker',
            size: 14,
            height:14
        }),material);
        scene.add(mesh);

        //渲染
        renderer.render(scene,camera);
    });

    function init() {

    }
</script>
